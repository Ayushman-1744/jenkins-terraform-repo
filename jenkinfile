pipeline {
    agent any

    parameters {
        choice(
            name: 'TERRAFORM_ACTION',
            choices: ['apply', 'destroy'],
            description: 'Choose whether to apply or destroy the Terraform infrastructure.'
        )
    }

    environment {
        AWS_DEFAULT_REGION = 'ap-south-1'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Terraform with AWS Credentials') {
            environment {
                // Optional: Expose AWS creds as env variables for Terraform CLI
                // AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY can be used internally
            }
            steps {
                withAWS(credentials: '88947dd9-eb81-4f9e-bd06-e8d95b5fa485', region: "${env.AWS_DEFAULT_REGION}") {
                    script {
                        echo "Using AWS Credentials"

                        // Initialize Terraform
                        sh 'terraform init'

                        // Check formatting
                        sh 'terraform fmt -check'

                        // Validate config
                        sh 'terraform validate'

                        // Create plan based on user action
                        if (params.TERRAFORM_ACTION == 'apply') {
                            sh 'terraform plan -out=tfplan'
                        } else if (params.TERRAFORM_ACTION == 'destroy') {
                            sh 'terraform plan -destroy -out=tfplan'
                        }
                    }
                }
            }
        }

        stage('Terraform Apply/Destroy') {
            steps {
                input message: "Do you want to proceed with ${params.TERRAFORM_ACTION}?"
                withAWS(credentials: '88947dd9-eb81-4f9e-bd06-e8d95b5fa485', region: "${env.AWS_DEFAULT_REGION}") {
                    script {
                        if (params.TERRAFORM_ACTION == 'apply' || params.TERRAFORM_ACTION == 'destroy') {
                            sh 'terraform apply tfplan'
                        }
                    }
                }
            }
        }
    }
}
